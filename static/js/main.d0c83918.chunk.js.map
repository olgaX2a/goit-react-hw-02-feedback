{"version":3,"sources":["components/Section/Section.jsx","components/Statistics/Statistics.jsx","components/Notification/Notification.jsx","components/Controls/Controls.jsx","components/FeedbackOptions/FeedbackOptions.jsx","App.jsx","index.js"],"names":["Section","title","children","className","Statistics","good","neutral","bad","total","positivePercentage","Notification","message","Controls","name","cbOnClick","type","onClick","FeedbackOptions","options","onLeaveFeedback","map","option","App","state","countTotalFeedback","countPositiveFeedbackPercentage","toFixed","addVote","e","target","setState","prevState","this","controlTitles","Object","keys","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uVAgBeA,EAbC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,0BAASC,UAAU,UAAnB,UACE,oBAAIA,UAAU,iBAAd,SAAgCF,IAC/BC,MCuCQE,G,MA3CI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,qBAAIN,UAAU,iBAAd,UACE,oBAAIA,UAAU,uBAAd,SACE,oBAAGA,UAAU,uBAAb,kBAEE,sBAAMA,UAAU,uBAAhB,SAAwCE,SAG5C,oBAAIF,UAAU,uBAAd,SACE,oBAAGA,UAAU,uBAAb,qBAEE,sBAAMA,UAAU,uBAAhB,SAAwCG,SAG5C,oBAAIH,UAAU,uBAAd,SACE,oBAAGA,UAAU,uBAAb,iBAEE,sBAAMA,UAAU,uBAAhB,SAAwCI,SAG5C,oBAAIJ,UAAU,uBAAd,SACE,oBAAGA,UAAU,uBAAb,mBAEE,sBAAMA,UAAU,uBAAhB,SAAwCK,SAG5C,oBAAIL,UAAU,uBAAd,SACE,oBAAGA,UAAU,uBAAb,+BAEE,uBAAMA,UAAU,uBAAhB,UAAwCM,EAAxC,iBCvBKC,EAPM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,4BAAIA,KCeEC,G,YAhBE,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,UACxB,OACE,wBACED,KAAMA,EACNE,KAAK,SACLZ,UAAU,gBACVa,QAASF,EAJX,SAMGD,MCGQI,EAZS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,oBAAIhB,UAAU,eAAd,SACGe,EAAQE,KAAI,SAACC,GAAD,OACX,oBAAiBlB,UAAU,qBAA3B,SACE,cAAC,EAAD,CAAUU,KAAMQ,EAAQP,UAAWK,KAD5BE,SCyDFC,E,4MAxDbC,MAAQ,CACNlB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPiB,mBAAqB,WACnB,MAA+B,EAAKD,MACpC,OADA,EAAQlB,KAAR,EAAcC,QAAd,EAAuBC,K,EAGzBkB,gCAAkC,WAGhC,OAAgB,KAFC,EAAKF,MAAdlB,KACa,EAAKmB,uBACLE,QAAQ,I,EAG/BC,QAAU,SAACC,GACT,IAAQf,EAASe,EAAEC,OAAXhB,KACR,EAAKiB,UAAS,SAACC,GACb,OAAO,eACJlB,EAAOkB,EAAUlB,GAAQ,O,4CAKhC,WACE,MAA+BmB,KAAKT,MAA5BlB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjB0B,EAAgBC,OAAOC,KAAKH,KAAKT,OACjCf,EAAQwB,KAAKR,qBACbf,GAAsBuB,KAAKP,kCACjC,OACE,qCACE,cAAC,EAAD,CAASxB,MAAM,wBAAf,SACE,cAAC,EAAD,CACEiB,QAASe,EACTd,gBAAiBa,KAAKL,YAG1B,cAAC,EAAD,CAAS1B,MAAM,aAAf,SACGO,EACC,cAAC,EAAD,CACEH,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,IAGtB,cAAC,EAAD,CAAcE,QAAQ,+B,GAjDhByB,aCDlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d0c83918.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\r\nimport \"./Section.css\";\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section className=\"Section\">\r\n      <h2 className=\"Section__title\">{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n};\r\n\r\nexport default Section;\r\n","import \"./Statistics.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <ul className=\"StatisticsList\">\r\n      <li className=\"StatisticsList__item\">\r\n        <p className=\"StatisticsList__text\">\r\n          Good:\r\n          <span className=\"StatisticsList__data\">{good}</span>\r\n        </p>\r\n      </li>\r\n      <li className=\"StatisticsList__item\">\r\n        <p className=\"StatisticsList__text\">\r\n          Neutral:\r\n          <span className=\"StatisticsList__data\">{neutral}</span>\r\n        </p>\r\n      </li>\r\n      <li className=\"StatisticsList__item\">\r\n        <p className=\"StatisticsList__text\">\r\n          Bad:\r\n          <span className=\"StatisticsList__data\">{bad}</span>\r\n        </p>\r\n      </li>\r\n      <li className=\"StatisticsList__item\">\r\n        <p className=\"StatisticsList__text\">\r\n          Total:\r\n          <span className=\"StatisticsList__data\">{total}</span>\r\n        </p>\r\n      </li>\r\n      <li className=\"StatisticsList__item\">\r\n        <p className=\"StatisticsList__text\">\r\n          Positive feedback:\r\n          <span className=\"StatisticsList__data\">{positivePercentage}%</span>\r\n        </p>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\nexport default Statistics;\r\n","// import \"./Notification.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Notification = ({ message }) => {\r\n  return <p>{message}</p>;\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\nexport default Notification;\r\n","import \"./Controls.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Controls = ({ name, cbOnClick }) => {\r\n  return (\r\n    <button\r\n      name={name}\r\n      type=\"button\"\r\n      className=\"Controls__btn\"\r\n      onClick={cbOnClick}\r\n    >\r\n      {name}\r\n    </button>\r\n  );\r\n};\r\n\r\nControls.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n};\r\nexport default Controls;\r\n","import \"./FeedbackOptions.css\";\r\nimport Controls from \"../Controls\";\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <ul className=\"ControlsList\">\r\n      {options.map((option) => (\r\n        <li key={option} className=\"ControlsList__item\">\r\n          <Controls name={option} cbOnClick={onLeaveFeedback} />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React, { Component } from \"react\";\nimport Section from \"./components/Section\";\nimport Statistics from \"./components/Statistics\";\nimport Notification from \"./components/Notification\";\nimport FeedbackOptions from \"./components/FeedbackOptions/FeedbackOptions\";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    const ratio = good / this.countTotalFeedback();\n    return (ratio * 100).toFixed(2);\n  };\n\n  addVote = (e) => {\n    const { name } = e.target;\n    this.setState((prevState) => {\n      return {\n        [name]: prevState[name] + 1,\n      };\n    });\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const controlTitles = Object.keys(this.state);\n    const total = this.countTotalFeedback();\n    const positivePercentage = +this.countPositiveFeedbackPercentage();\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={controlTitles}\n            onLeaveFeedback={this.addVote}\n          ></FeedbackOptions>\n        </Section>\n        <Section title=\"Statistics\">\n          {total ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={total}\n              positivePercentage={positivePercentage}\n            ></Statistics>\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}